# Default values for konga.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Set number of replicas
replicaCount: 1

# Set docker image
image:
  repository: pantsel/konga
  tag: 0.14.7
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Set configmap
config:
  # host : 0.0.0.0
  # port: 1337
  # node_env: development
  # db_adapter: mysql
  # db_host: 127.0.0.1
  # db_port: 3306
  # db_user: root
  # db_password: 
  # db_database: konga
  # token_secret: 36589ea75eb1fe478fa7b3e4de016c1e
  # konga_hook_timeout: 60000

# Set service type and port
service:
  type: ClusterIP
  port: 80

# If you want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

ingress:
    # Enable/disable exposure using ingress.
    enabled: false
    hosts: []
    # TLS section. Unlike other ingresses, this follows the format at
    # https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    # tls:
    # - hosts:
    #   - 1.example.com
    #   secretName: example1-com-tls-secret
    # - hosts:
    #   - 2.example.net
    #   secretName: example2-net-tls-secret
    # Map of ingress annotations.
    # Annotations section. If you want to use let's encrypt for generate TLS certificate, follow this article at:
    # https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-with-cert-manager-on-digitalocean-kubernetes
    # annotations:
    #   kubernetes.io/ingress.class: nginx
    #   cert-manager.io/cluster-issuer: letsencrypt
    # Ingress path.
    path: /


nodeSelector: {}

tolerations: []

affinity: {}
